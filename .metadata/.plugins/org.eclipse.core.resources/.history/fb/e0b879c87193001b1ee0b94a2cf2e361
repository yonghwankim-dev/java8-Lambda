package java8.chapter02_컬렉션의사용.ch02_06_엘리먼트선택;

import java.util.List;
import java.util.Optional;

public class PickAnElement {
	
	/**
	 * step1 주어진 문자로 시작하는 엘리먼트를 찾아 출력하는 메소드
	 * 첫번째 문제점
	 * foundName 변수를 생성하고 null로 초기화함
	 * null 체크를 해야 하고 체크하는 것을 잊어버리면 결과는 NullPointerException이 발생하여
	 * 문제가 생간다.
	 * 
	 * 두번째 문제점
	 * 이터레이터를 사용하여 찾고자 하는 엘리먼트를 찾으면 루프를 빠져나오는 점
	 * 
	 * 그외 문제점
	 * 원시적인 강박관념
	 * 명령형 스타일
	 * 가변성
	 */
	public static void pickName(final List<String> names, final String startingLetter) {
		String foundName = null;
		for(String name : names) {
			if(name.startsWith(startingLetter)) {
				foundName = name;
				break;
			}
		}
		System.out.println(String.format("A name starting with %s: ", startingLetter));
		
		if(foundName!=null)
		{
			System.out.println(foundName);
		}
		else
		{
			System.out.println("No name found");
		}
	}
	
	/**
	 * step2
	 * @param args
	 */
	public static void pickName2(final List<String> names, final String startingLetter) {
		final Optional<String> foundName = names.stream()
												.filter(name -> name.startsWith(startingLetter))
												.findFirst();
		
	}
	public static void main(String args[])
	{
		
	}
}
