package chapter03_문자열과비교및필터.ch03_01_스트링이터레이션;

public class IteraterString {
	public static void main(String args[])
	{
		/**
		 * step1 컨비니언트 인터널 이터레이터(Convenient Internal Iterator)를 사용하여
		 * 		스트링을 구성하는 개별적 문자들에 대해 오퍼레이션을 적용
		 * chars() 메서드는 forEach() 내부 이터레이터를 사용하여 이터레이션하는 스트림을 리턴한다.
		 * 
		 * 아래의 결과는 기대와는 달리 숫자로 출력된다. 이유는 chars() 메서드가 Characters의 스트림
		 * 대신 문자를 표현하는 int의 스트림을 리턴했기 때문이다. 
		 */
		final String str = "w00t";
		str.chars().forEach(ch -> System.out.println(ch)); // output 119 48 48 116
		
		/**
		 * step2 메서드 래퍼런스를 통한 문자 출력
		 * 인스턴스 메서드 -> name.toUpperCase()
		 * 메서드 레퍼런스 -> String::toUpperCase
		 * 
		 * String::toUppercase는 합성되는 메서드에 대한 파라미터이며,
		 * 이 메서드는 메서드 호출의 타깃으로 변환된다.
		 * 
		 * parameter.toUppercase();와 같다.
		 * 위와 같이 가능한 이유는 메서드 레퍼런스가 클래스 이름(String)을
		 * 기반으로 하기 때문임
		 */
		str.chars().forEach(System.out::println);
		
		
		
	}
	/**
	 * step3 컨비니언스 메서드(Convenience Method)를 사용해서
	 * 		int를 문자로 출력하는 코드를 작성
	 */
	public static void printChar(int aChar)
	{
		System.out.println((char)achar);
	}
}
